#!/bin/bash

set -e
# This wrapper script will parse the user's file paths, create the .env file on the fly, and then execute the docker-compose command.

# --- Default container-side paths ---
CONTAINER_DATA_PATH="/data"
CONTAINER_OUTPUT_PATH="/output"
CONTAINER_GENOME_DIR_PATH="/genome_ref_dir"

# --- Variables for smarter validation ---
dataDir_is_required=false
steps_to_run=""
HOST_GENOME_REF_DIR=""
SMEDANNO_SCRIPT_ARGS=()

# Parse all arguments provided to this wrapper script
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --dataDir)
            HOST_DATA_PATH=$(realpath "$2")
            SMEDANNO_SCRIPT_ARGS+=("--dataDir" "${CONTAINER_DATA_PATH}")
            shift 2
            ;;
        --outputDir)
            HOST_OUTPUT_PATH=$(realpath "$2")
            SMEDANNO_SCRIPT_ARGS+=("--outputDir" "${CONTAINER_OUTPUT_PATH}")
            shift 2
            ;;
        --genomeRef)
            # More robust genomeRef handling
            GENOME_REF_HOST_PATH=$(realpath "$2")
            HOST_GENOME_REF_DIR=$(dirname "${GENOME_REF_HOST_PATH}")
            GENOME_REF_FILENAME=$(basename "${GENOME_REF_HOST_PATH}")
            
            # Pass the new container-side path to the main script
            SMEDANNO_SCRIPT_ARGS+=("--genomeRef" "${CONTAINER_GENOME_DIR_PATH}/${GENOME_REF_FILENAME}")
            shift 2
            ;;
        --all)
            dataDir_is_required=true
            SMEDANNO_SCRIPT_ARGS+=("$1")
            shift
            ;;
        --steps)
            steps_to_run="$2"
            # Check if any of the specified steps require the data directory
            if [[ ",${steps_to_run}," == *",0,"* || ",${steps_to_run}," == *",1,"* || ",${steps_to_run}," == *",2,"* ]]; then
                dataDir_is_required=true
            fi
            SMEDANNO_SCRIPT_ARGS+=("$1" "$2")
            shift 2
            ;;
        *)
            # Pass all other arguments directly
            SMEDANNO_SCRIPT_ARGS+=("$1")
            shift
            ;;
    esac
done

# --- Conditionally Validate Paths ---
if [ -z "$HOST_OUTPUT_PATH" ]; then
    echo "Error: You must provide the --outputDir argument."
    exit 1
fi

if [[ "$dataDir_is_required" == true && -z "$HOST_DATA_PATH" ]]; then
    echo "Error: --dataDir is required for the selected steps (e.g., 0, 1, 2, or --all)."
    exit 1
fi

# If dataDir is not required and not provided, create a dummy directory for the mount
if [ -z "$HOST_DATA_PATH" ]; then
    echo "Creating dummy data directory for Docker mount..."
    DUMMY_DATA_DIR=$(mktemp -d -p "$PWD" .smedanno_dummy_data_XXXXXX)
    # Ensure the dummy directory is removed on script exit
    trap 'echo "Cleaning up dummy data directory..."; rm -rf -- "$DUMMY_DATA_DIR"' EXIT
    HOST_DATA_PATH=${DUMMY_DATA_DIR}
fi

# If a genome was provided, use its path. Otherwise, use a dummy path.
if [ -z "$HOST_GENOME_REF_DIR" ]; then
    HOST_GENOME_REF_DIR=${HOST_DATA_PATH} # Mount dummy dir if no genome is provided
fi

echo "Host Data Path Detected: ${HOST_DATA_PATH}"
echo "Host Output Path Detected: ${HOST_OUTPUT_PATH}"
echo "Host Genome Ref Path Detected: ${HOST_GENOME_REF_DIR}"

# Dynamically create the .env file
echo "Creating dynamic .env file..."
cat <<EOF > .env
# This file is auto-generated by run_smedanno.sh
DATA_PATH=${HOST_DATA_PATH}
OUTPUT_PATH=${HOST_OUTPUT_PATH}
GENOME_REF_DIR_PATH=${HOST_GENOME_REF_DIR}
EOF

# Execute Docker Compose
echo "Executing pipeline via docker-compose..."
docker-compose run --rm smedanno "${SMEDANNO_SCRIPT_ARGS[@]}"

echo "Wrapper script finished."